#!/bin/bash
# "dot" - a tiny static site generator
# needs (sudo apt install ...):
# libxml2-utils
# recode
# markdown
# html-xml-utils
# busybox (for staging server)

# set up variables
projectD=$1"/"
htmlD=$projectD"_published/blog/"

templateD=$projectD"templates/"
templateF=$templateD"article.html"
contentF=$templateD"content.html"
headlineF=$templateD"headline.html"
summaryF=$templateD"summary.html"

indexF=$htmlD"index.html"
preampleF=$templateD"preample.html"
postampleF=$templateD"postample.html"

tempF=$templateD"_temp.html"

# if var is empty
if [ -z "${2}" ];
then
  shopt -s nullglob
  markdownFiles=($projectD"md/*")
else
  markdownFiles+=($projectD"md/"$2)
fi

# make sure index file is removed before we re-create index
rm "$indexF" > /dev/null 2>&1

# add preample to index
cat "$preampleF" > "$tempF"

# loop over markdown files
for markdownF in $markdownFiles
do
  # grab current markdown file
  articleF=$htmlD"$(basename "$markdownF" .md).html"
  dmod=$(date '+%F %T' -d "@$(stat -c '%Y' "$markdownF")")

  # do the conversion
  markdown "$markdownF" | xml2asc > "$contentF"

  # extract headline and summary
  headline="$(xmllint --html --xpath "//h1/text()" "$contentF")"
  summary="$(xmllint --html --xpath "//p[1]/text()" "$contentF")"

  echo $headline > "$headlineF"
  echo $summary > "$summaryF"

  # parse template
  hxincl -f "$templateF" | xml2asc | hxnormalize -e > "$articleF"

  # add to index
  echo \<li class=\"dotIndexItem\"\> \
          \<a class=\"dotIndexLink\" href=\"$(basename "$articleF")\"\>\<span class=\"dotIndexHeadline\"\>$headline\<\/span\>\<\/a\> \
          \<span class=\"dotIndexModified\"\>\($dmod\)\<\/span\>\<br\> \
          \<span class=\"dotIndexSummary\"\>$summary\<\/span\> \
       \<\/li\> >> $tempF
done

# add postample to index
cat "$postampleF" >> "$tempF"

# beautify index file
hxnormalize -e "$tempF" > "$indexF"

# clean up
rm "$headlineF"
rm "$contentF"
rm "$tempF"
rm "$summaryF"


# Unused code for reference
# markdown --html4tags article.md | recode utf-8..cp1252 > content.html
# h1=$(hxextract h1 content.html | sed -e 's/<h1>//g' -e 's/<\/h1>//g')
# sed -i 's/"$h1"//g' content.html
# xmllint --html --format $fname
# hxmultitoc > index.html
# "$(date +"%FT%H%M%z").html"