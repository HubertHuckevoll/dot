#!/bin/bash

# "dot" - a tiny static site generator
# needs (sudo apt install ...):
# libxml2-utils
# markdown
# html-xml-utils
# (recode, optional for retro pages)
# busybox (for staging server)

# set up variables
projectD=$1"/"
mdD=$projectD"md/"
htmlD=$projectD"_published/"
markdownFiles=()

templateD=$projectD"templates/"
templateF=$templateD"article.html"

indexF=$htmlD"index.html"
preampleF=$templateD"indexPre.html"
indexItemF=$templateD"indexItem.html"
postampleF=$templateD"indexPost.html"

tempF=$templateD"_temp.html"

# make sure html folder is clean before we re-create
rm "$htmlD"*.html > /dev/null 2>&1

# add preample to index
cat "$preampleF" > "$tempF"

shopt -s nullglob
markdownFiles=($mdD*.md)

# loop over markdown files
for markdownF in "${markdownFiles[@]}" #"${markdownFiles[@]}"
do
  # grab current markdown file
  articleF=$htmlD"$(basename "$markdownF" .md).html"

  # extract first letter for check if file name starts with "_"
  isPage=$(basename "$markdownF")
  isPage=${isPage:0:1}

  # extract date from filename: 2023_09_14_13_30_dot_article_2 or use
  # current date for "pages"
  if [ $isPage != "_" ]; then
    filename=$(basename "$markdownF")
    date_time=$(echo $filename | sed -E 's/([0-9]{4}_[0-9]{2}_[0-9]{2}_[0-9]{2}_[0-9]{2})_.*/\1/g')
    year=${date_time:0:4}
    month=${date_time:5:2}
    day=${date_time:8:2}
    hour=${date_time:11:2}
    minute=${date_time:14:2}
    dmod=$(date -d "$year-$month-$day $hour:$minute" +"%Y-%m-%d %H:%M:%S")
  else
    dmod=$(date '+%F %T' -d "@$(stat -c '%Y' "$markdownF")")
  fi

  # do the md => html conversion
  content=$(markdown "$markdownF")

  # extract headline and summary
  headline="$(echo $content | xml2asc| xmllint --html --xpath "//h1/text()" -)"
  summary="$(echo $content | xml2asc | xmllint --html --xpath "//p[1]/text()" -)"

  # parse template for article
  awk -v h="$headline" \
      -v s="$summary" \
      -v d="$dmod" \
      -v c="$content" \
      '{
          gsub(/\{\{HEADLINE\}\}/,h);
          gsub(/\{\{SUMMARY\}\}/,s);
          gsub(/\{\{DMOD\}\}/,d);
          gsub(/\{\{CONTENT\}\}/,c);
          print
       }' \
      "$templateF" | hxnormalize -e -l 85 > "$articleF"

  # parse template for index file item
  if [ $isPage != "_" ]; then
    awk -v h="$headline" \
        -v s="$summary" \
        -v d="$dmod" \
        -v a="$(basename "$articleF")" \
        '{
            gsub(/\{\{HEADLINE\}\}/,h);
            gsub(/\{\{SUMMARY\}\}/,s);
            gsub(/\{\{DMOD\}\}/,d);
            gsub(/\{\{ARTICLEF\}\}/,a);
            print
        }' \
        "$indexItemF" >> "$tempF"
  fi
done

# add postample to index
cat "$postampleF" >> "$tempF"

# beautify index file
hxnormalize -e -l 85 "$tempF" > "$indexF"

# clean up
rm "$tempF"