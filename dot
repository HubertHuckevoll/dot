#!/bin/bash
# a tiny static site generator
# needs (sudo apt install ...):
# libxml2-utils
# recode
# markdown
# html-xml-utils
# busybox (for staging server)

# set up variables
projectD=$1"/"
htmlD=$projectD"_published/blog/"

templateD=$projectD"templates/"
templateF=$templateD"article.html"
contentF=$templateD"content.html"
headlineF=$templateD"headline.html"

indexF=$htmlD"index.html"
preampleF=$templateD"preample.html"
postampleF=$templateD"postample.html"

tempF=$templateD"_temp.html"

if [ -z "${2}" ]; # if var is empty
then
  shopt -s nullglob
  markdownFiles=($projectD"md/*")
else
  markdownFiles+=($projectD"md/"$2)
fi

for markdownF in $markdownFiles
do
  articleF=$htmlD"$(basename "$markdownF" .md).html"

  # do the conversion
  markdown "$markdownF" | xml2asc > "$contentF"
  xmllint --html --xpath "//h1/text()" "$contentF" > "$headlineF"
  hxincl -f "$templateF" | xml2asc > "$tempF"
  hxnormalize -e "$tempF" > "$articleF"

  rm "$indexF" > /dev/null 2>&1
  cd $htmlD
  hxmultitoc -s "$(cat "$preampleF")" -e "$(cat "$postampleF")" *.html > "$tempF"
  cd "$OLDPWD"
  hxnormalize -e "$tempF" > "$indexF"

  # clean up
  rm "$headlineF"
  rm "$contentF"
  rm "$tempF"
done

# Unused code for reference
# markdown --html4tags article.md | recode utf-8..cp1252 > content.html
# h1=$(hxextract h1 content.html | sed -e 's/<h1>//g' -e 's/<\/h1>//g')
# sed -i 's/"$h1"//g' content.html
# xmllint --html --format $fname
# hxmultitoc > index.html
# "$(date +"%FT%H%M%z").html"