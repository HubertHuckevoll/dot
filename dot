#!/bin/bash

# "dot" - a tiny static site generator
# needs (sudo apt install ...):
# libxml2-utils
# recode
# markdown
# html-xml-utils
# busybox (for staging server)

# set up variables
projectD=$1"/"
htmlD=$projectD"_published/blog/"

templateD=$projectD"templates/"
templateF=$templateD"article.html"

indexF=$htmlD"index.html"
preampleF=$templateD"indexPre.html"
indexItemF=$templateD"indexItem.html"
postampleF=$templateD"indexPost.html"

tempF=$templateD"_temp.html"

# if no article is passed as parameter, do them all
if [ -z "${2}" ];
then
  shopt -s nullglob
  markdownFiles=($projectD"md/*")
else
  markdownFiles+=($projectD"md/"$2)
fi

# make sure index file is removed before we re-create index
rm "$indexF" > /dev/null 2>&1

# add preample to index
cat "$preampleF" > "$tempF"

# loop over markdown files
for markdownF in $markdownFiles
do
  # grab current markdown file
  articleF=$htmlD"$(basename "$markdownF" .md).html"
  dmod=$(date '+%F %T' -d "@$(stat -c '%Y' "$markdownF")")

  # do the conversion
  content=$(markdown "$markdownF")

  # extract headline and summary
  headline="$(echo $content | xmllint --html --xpath "//h1/text()" -)"
  summary="$(echo $content | xmllint --html --xpath "//p[1]/text()" -)"

  # parse template
  # hxincl -f "$templateF" | xml2asc | hxnormalize -e > "$articleF"

  #awk -v z="$headline" '{gsub(/%HEADLINE%/, z)}1' "$templateF" | \
  #awk -v z="$dmod"     '{gsub(/%DMOD%/, z)}1' | \
  #awk -v z="$content"  '{gsub(/%CONTENT%/, z)}1' | \
  #xml2asc | hxnormalize -e > "$articleF"

  awk -v h="$headline" \
      -v d="$dmod" \
      -v c="$content" \
      '{
          gsub(/%HEADLINE%/,h);
          gsub(/%DMOD%/,d);
          gsub(/%CONTENT%/,c);
          print
       }' \
      "$templateF" | xml2asc | hxnormalize -e > "$articleF"

  awk -v h="$headline" \
      -v d="$dmod" \
      -v s="$summary" \
      -v a="$(basename "$articleF")" \
      '{
          gsub(/%HEADLINE%/,h);
          gsub(/%DMOD%/,d);
          gsub(/%SUMMARY%/,s);
          gsub(/%ARTICLEF%/,a);
          print
       }' \
      "$indexItemF" >> "$tempF"

#  awk -v z="$headline" '{gsub(/%HEADLINE%/, z)}1' "$indexItemF" | \
#  awk -v z="$dmod"     '{gsub(/%DMOD%/, z)}1' | \
#  awk -v z="$summary"  '{gsub(/%SUMMARY%/, z)}1' | \
#  awk -v z="$(basename "$articleF")" '{gsub(/%ARTICLEF%/, z)}1' | \
#  hxnormalize -e >> "$tempF"

  # add to index
#  sed -e "s/%ARTICLEF%/$(basename "$articleF")/g" \
#      -e "s/%DMOD%/$dmod/g" \
#      -e "s/%SUMMARY%/$summary/g" \
#      -e "s/%HEADLINE%/$headline/g" \
#      "$indexItemF" >> "$tempF"

done

# add postample to index
cat "$postampleF" >> "$tempF"

# beautify index file
hxnormalize -e "$tempF" > "$indexF"

# clean up
#rm "$headlineF"
#rm "$contentF"
rm "$tempF"
#rm "$summaryF"


# Unused code for reference
# markdown --html4tags article.md | recode utf-8..cp1252 > content.html
# h1=$(hxextract h1 content.html | sed -e 's/<h1>//g' -e 's/<\/h1>//g')
# sed -i 's/"$h1"//g' content.html
# xmllint --html --format $fname
# hxmultitoc > index.html
# "$(date +"%FT%H%M%z").html"